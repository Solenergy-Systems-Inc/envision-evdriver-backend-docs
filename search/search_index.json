{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This is hosted in GitHub Pages. Happy Reading.</p>"},{"location":"#installation","title":"Installation","text":""},{"location":"#1-install-mkdocs-via-pip","title":"1. Install mkdocs via pip","text":"<pre><code>pip install mkdocs\n</code></pre>"},{"location":"#2-install-all-the-necessary-packages","title":"2. Install all the necessary packages","text":"<pre><code>pip install mkdocs-material\npip install mkdocstrings\npip install \"mkdocstrings[python]\"\npip install mkdocs-awesome-pages-plugin \npip install mkdocs-material \npip install mkdocs-autorefs\n</code></pre>"},{"location":"#3-run-the-server-locally","title":"3. Run the server locally","text":"<pre><code>mkdocs serve\n</code></pre>"},{"location":"#how-to-deploy","title":"How To Deploy","text":"<p>Only manual deployment is supported. GitHub Pages for private repositories is not available for free tier.</p>"},{"location":"#1-add-remote-only-once","title":"1. Add Remote [Only Once]","text":"<pre><code>git remote add docs https://github.com/Solenergy-Systems-Inc/envision-evdriver-backend-docs.git\n</code></pre>"},{"location":"#2-deploy","title":"2. Deploy","text":"<pre><code>mkdocs gh-deploy -r docs\n</code></pre>"},{"location":"AWS/Layers/","title":"Layers","text":""},{"location":"AWS/Layers/#1-go-to-the-download-files-section-of-the-package-you-want","title":"1. Go to the <code>Download Files</code> section of the package you want.","text":""},{"location":"AWS/Layers/#2-download-the-archive-for-your-intended-python-version","title":"2. Download the archive for your intended Python version.","text":"<p>Most packages will only have one archive that is compatible with any platform. In cases of multiple options, look for <code>x86-64</code> AND <code>manylinux</code>, which is what we currently use at the time of writing.</p> <p></p>"},{"location":"AWS/Layers/#3-extract-its-contents-to-a-folder-specifically-named-python","title":"3. Extract its contents to a folder specifically named <code>python</code>.","text":""},{"location":"AWS/Layers/#4-do-the-same-for-its-dependencies-the-ending-folder-structure-should-look-like-this","title":"4. Do the same for its dependencies. The ending folder structure should look like this:","text":"<p>To find its dependencies, try to install the package in an empty virtual environment, then do <code>pip list</code>.</p> <p></p>"},{"location":"AWS/Layers/#5-zip-the-folder-and-upload-it-to-aws-lambda","title":"5. Zip the folder and upload it to AWS Lambda.","text":"<ul> <li>Make sure that the <code>python</code> folder is at the base of the archive.</li> <li>The name of the archive does not matter.</li> </ul>"},{"location":"Charger/Charger%20Reservation%20%5BSOFT%5D/","title":"Charger Reservation [SOFT]","text":""},{"location":"Charger/Charger%20Reservation%20%5BSOFT%5D/#connect-url","title":"Connect URL","text":"<pre><code>THIS IS A SECRET. MESSAGE A DEV.\n</code></pre>"},{"location":"Charger/Charger%20Reservation%20%5BSOFT%5D/#reserving-a-charger","title":"Reserving a Charger","text":"<ol> <li> <p>The client connects to the websocket.</p> </li> <li> <p>Upon connecting, the client sends a message with <code>command</code> set to <code>START</code>.</p> <ul> <li>If there is an existing reservation within the time limit, an error will be thrown.</li> <li>If there is an existing reservation past the time limit, the reservation will be overwritten.</li> <li>If the client disconnects without sending <code>HOLD</code> prior, the reservation will be cancelled.</li> <li>If the charger is not <code>Preparing</code>, an error will be thrown.</li> </ul> </li> <li> <p>Before paying, the client sends a message with <code>command</code> set to <code>HOLD</code>.</p> <ul> <li>If reservation does not exist, an error will be thrown.</li> <li>If a different user email tries to hold the reservation, an error will be thrown.</li> <li>If the reservation is not active, an error will be thrown.</li> </ul> </li> <li> <p>Upon returning, the client sends a message with <code>command</code> set to <code>RESUME</code>.</p> <ul> <li>If reservation does not exist, an error will be thrown.</li> <li>If a different user email tries to hold the reservation, an error will be thrown.</li> <li>If the reservation is not on hold, an error will be thrown.</li> </ul> </li> <li> <p>[Optional] Upon returning, the client sends a message with <code>command</code> set to <code>CANCEL</code>.</p> <ul> <li>If reservation does not exist, an error will be thrown.</li> <li>If a different user email tries to hold the reservation, an error will be thrown.</li> </ul> </li> </ol>"},{"location":"Charger/Charger%20Reservation%20%5BSOFT%5D/#modules.charger.soft_reservation.__.dtos.ReserveChargerRequestDTO.ReserveChargerRequestDTO","title":"<code>ReserveChargerRequestDTO</code>","text":"<p>This should be the message of the request from the client.</p> <p>Attributes:</p> Name Type Description <code>action</code> <code>str</code> <p>ALWAYS SET TO 'reserveCharger'</p> <code>site_id</code> <code>int</code> <p>SITE OF CHARGER TO RESERVE</p> <code>charger_id</code> <code>str</code> <p>CHARGER TO RESERVE</p> <code>connector_id</code> <code>int</code> <p>CONNECTOR TO BE USED WITHIN THE CHARGER</p> <code>command</code> <code>Union[str, ReservationCommandEnum]</code> <p>SHOULD BE ONE OF THE ENUM</p> <code>email</code> <code>str</code> <p>EMAIL OF RESERVER</p>"},{"location":"Charger/Charger%20Reservation%20%5BSOFT%5D/#modules.charger.soft_reservation.__.enums.ReservationCommandEnum.ReservationCommandEnum","title":"<code>ReservationCommandEnum</code>","text":"<p>Attributes:</p> Name Type Description <code>START</code> <p>USED UPON CONNECTING TO THE WEBSOCKET</p> <code>HOLD</code> <p>USED JUST BEFORE PAYMENT REDIRECTION</p> <code>RESUME</code> <p>USED AFTER PAYING</p> <code>CANCEL</code> <p>USED TO CANCEL RESERVATION</p>"},{"location":"Charger/Charger%20Reservation%20%5BSOFT%5D/#modules.charger.soft_reservation.__.enums.ReservationErrorEnum.ReservationErrorEnum","title":"<code>ReservationErrorEnum</code>","text":"<p>Attributes:</p> Name Type Description <code>INVALID_COMMAND</code> <p>INVALID <code>command</code> FIELD</p> <code>EXISTING_RESERVATION</code> <p>THERE IS AN EXISTING CHARGER RESERVATION</p> <code>NON_EXISTING_RESERVATION</code> <p>THERE IS NO EXISTING CHARGER RESERVATION</p> <code>DIFFERENT_USER_EMAIL</code> <p>DIFFERENT USER IS TRYING TO INTERACT WITH THE RESERVATION</p> <code>CHARGER_NOT_PREPARING</code> <p>CHARGER IS NOT IN PREPARING STATUS</p> <code>CHARGER_RESERVATION_NOT_HOLDABLE</code> <p>CHARGER RESERVATION IS NOT HOLDABLE</p> <code>CHARGER_RESERVATION_NOT_RESUMEABLE</code> <p>CHARGER RESERVATION IS NOT RESUMEABLE</p>"},{"location":"Charger/Start%20and%20Stop%20Charging/","title":"Start and Stop Charging","text":""},{"location":"Charger/Start%20and%20Stop%20Charging/#relevant-branch","title":"RELEVANT BRANCH","text":"<p>https://github.com/Solenergy-Systems-Inc/envision-vps/tree/main-migration</p>"},{"location":"Charger/Start%20and%20Stop%20Charging/#old-system","title":"OLD SYSTEM","text":"<pre><code>sequenceDiagram\n  participant FRONTEND\n  participant AWS BE\n  participant FLASK APP\n  participant WebSocket SERVER\n  participant EMBEDDED\n\n  loop\n    EMBEDDED-&gt;&gt;WebSocket SERVER: HEARTBEAT &amp; OTHER MESSAGES &lt;br&gt; (CHECK NOTE 1)\n  end\n\n  FRONTEND-&gt;&gt;AWS BE: START CHARGING &lt;br&gt; VIA HTTP\n  AWS BE-&gt;&gt;FLASK APP: START CHARGING &lt;br&gt; VIA HTTP\n  FLASK APP-&gt;&gt;WebSocket SERVER: START CHARGING &lt;br&gt; VIA WebSocket &lt;br&gt; (CHECK NOTE 2)\n  WebSocket SERVER-&gt;&gt;EMBEDDED: START CHARGING &lt;br&gt; VIA WebSocket\n\n  EMBEDDED-&gt;&gt;WebSocket SERVER: RETURN RESPONSE &lt;br&gt; VIA WebSocket\n  WebSocket SERVER-&gt;&gt;FLASK APP: RETURN RESPONSE &lt;br&gt; VIA WebSocket &lt;br&gt; (CHECK NOTE 2)\n  FLASK APP-&gt;&gt;AWS BE: RETURN RESPONSE &lt;br&gt; VIA HTTP\n  AWS BE-&gt;&gt;FRONTEND: RETURN RESPONSE &lt;br&gt; VIA HTTP</code></pre>"},{"location":"Charger/Start%20and%20Stop%20Charging/#notes","title":"NOTES","text":"<ol> <li>Messages from the EMBEDDED are handled here.<ul> <li>When the WebSocket SERVER receives a heartbeat, it saves that connection to a global   dictionary   with the site ID as the key.</li> <li>When the EMBEDDED side disconnects, the connection is removed from the global dictionary.</li> </ul> </li> <li>I think this was a workaround. The reason why this connection uses WebSocket instead of HTTP    is because the message/response from embedded is received in a separate loop.<ul> <li>With HTTP, the separate loop wouldn't be able to send the response.</li> <li>With WebSocket, the connection object between FLASK APP and the WebSocket SERVER can be   saved in a global dictionary, which can be accessed by the separate loop to send the response.</li> </ul> </li> </ol>"},{"location":"Charger/Start%20and%20Stop%20Charging/#new-system","title":"NEW SYSTEM","text":"<p>The diagram below includes the inner working of the FastAPI App.</p> <pre><code>sequenceDiagram\n  participant FRONTEND\n  participant AWS BE\n  participant FastAPI APP\n  participant EMBEDDED\n\n  loop\n    EMBEDDED-&gt;&gt;FastAPI APP: HEARTBEAT &amp; OTHER MESSAGES &lt;br&gt; (CHECK Sub-Graph 1)\n  end\n\n  FRONTEND-&gt;&gt;AWS BE: START CHARGING &lt;br&gt; VIA HTTP\n  AWS BE-&gt;&gt;FastAPI APP: START CHARGING &lt;br&gt; (CHECK Sub-Graph 2)\n  FastAPI APP-&gt;&gt;EMBEDDED: START CHARGING &lt;br&gt; (CHECK Sub-Graph 2)\n\n  EMBEDDED-&gt;&gt;FastAPI APP: RETURN RESPONSE &lt;br&gt; (CHECK Sub-Graph 2)\n  FastAPI APP-&gt;&gt;AWS BE: RETURN RESPONSE &lt;br&gt; (CHECK Sub-Graph 2)\n  AWS BE-&gt;&gt;FRONTEND: RETURN RESPONSE &lt;br&gt; VIA HTTP</code></pre>"},{"location":"Charger/Start%20and%20Stop%20Charging/#sub-graph-1","title":"Sub-Graph 1","text":"<p>Whenever the FastAPI APP receives:</p> <ol> <li>Heartbeat from EMBEDDED: the connection object is saved in <code>active_connections.py</code>.</li> <li>CallResult or CallError from EMBEDDED: the response is sent to the <code>Future</code> objects in    <code>delayed_start_responses.py</code> or <code>delayed_stop_responses.py</code>.</li> </ol> <pre><code>flowchart TB\n   embedded_socket.py &lt;--&gt; EMBEDDED\n\n   embedded_socket.py --&gt; active_connections.py\n   embedded_socket.py --&gt; delayed_start_responses.py\n   embedded_socket.py --&gt; delayed_stop_responses.py\n\n   subgraph \" \"\n      GLOBALS\n\n      active_connections.py\n      auto_stop_threads.py\n      delayed_start_responses.py\n      delayed_stop_responses.py\n\n      style GLOBALS fill:none, stroke:none\n   end</code></pre>"},{"location":"Charger/Start%20and%20Stop%20Charging/#sub-graph-2","title":"Sub-Graph 2","text":"<ol> <li><code>start_charging.py</code> and <code>stop_charging.py</code> makes use of data the WebSocket objects in    <code>active_connections.py</code> to send the start/stop requests to EMBEDDED.</li> <li>The <code>Future</code> objects in <code>delayed_start_responses.py</code> and <code>delayed_stop_responses.py</code> are    awaited for the response of embedded from the start/stop request.</li> </ol> <pre><code>flowchart TB\n   subgraph \" \"\n      GLOBALS\n\n      delayed_start_responses.py\n      active_connections.py\n      auto_stop_threads.py\n      delayed_stop_responses.py\n\n      style GLOBALS fill:none, stroke:none\n   end\n\n   active_connections.py --&gt; start_charging.py\n   active_connections.py --&gt; stop_charging.py\n\n   delayed_start_responses.py --&gt; start_charging.py\n   delayed_stop_responses.py --&gt; stop_charging.py\n\n   start_charging.py &lt;--&gt; AWS_BE[AWS BE]\n   stop_charging.py &lt;--&gt; AWS_BE</code></pre>"},{"location":"Charger/Start%20and%20Stop%20Charging/#sub-graph-3","title":"Sub-Graph 3","text":"<ol> <li>The global variable <code>auto_stop_threads</code> contains the <code>Timer</code> threads that will automatically    stop the charging. This dictionary exists to have a way to cancel the timer if the charging    is stopped manually.</li> </ol> <pre><code>flowchart TB\n   subgraph \" \"\n      GLOBALS\n\n      delayed_start_responses.py\n      active_connections.py\n      auto_stop_threads.py\n      delayed_stop_responses.py\n\n      style GLOBALS fill:none, stroke:none\n   end\n\n   start_charging.py --&gt; auto_stop_threads.py\n   auto_stop_threads.py --&gt; stop_charging.py</code></pre>"},{"location":"Charger/Start%20and%20Stop%20Charging/#new-new-system","title":"NEW NEW SYSTEM","text":"<pre><code>sequenceDiagram\n  participant FRONTEND\n  participant FastAPI APP\n  participant EMBEDDED\n\n  loop\n    EMBEDDED-&gt;&gt;FastAPI APP: HEARTBEAT &amp; OTHER MESSAGES\n  end\n\n  FRONTEND-&gt;&gt;FastAPI APP: START/STOP CHARGING\n  FastAPI APP-&gt;&gt;EMBEDDED: START/STOP CHARGING\n\n  EMBEDDED-&gt;&gt;FastAPI APP: RETURN RESPONSE\n  FastAPI APP-&gt;&gt;FRONTEND: RETURN RESPONSE</code></pre>"},{"location":"Charger/Start%20and%20Stop%20Charging/#in-depth","title":"In-Depth","text":"<p>Whenever EMBEDDED sends the FastAPI APP a:</p> <ol> <li>Heartbeat: the connection object is saved in <code>embedded_connections.py</code>.</li> <li>CallResult or CallError: the response is sent to the <code>Future</code> objects in <code>future_responses.py</code>.</li> </ol> <pre><code>flowchart LR\n   CLIENT &lt;--&gt; clientSocket.py\n\n   subgraph \" \"\n      embedded_connections.py\n      future_responses.py\n   end\n\n   clientSocket.py -- &lt;&lt;&lt; --- embedded_connections.py -- &lt;&lt;&lt; --- embeddedSocket.py\n   clientSocket.py -- &lt;&lt;&lt; --- future_responses.py -- &lt;&lt;&lt; --- embeddedSocket.py\n\n   clientSocket.py --&gt;|Uses WebSocket object&lt;br&gt;from embedded_connections.py| EMBEDDED\n   embeddedSocket.py -- &lt;&lt;&lt; --- EMBEDDED</code></pre>"},{"location":"Charger/%5BGET%5D%20selectCharger/","title":"[GET] selectCharger","text":"<pre><code>/api/selectCharger\n</code></pre>"},{"location":"Charger/%5BGET%5D%20selectCharger/#modules.charger.__.dtos.SelectChargerRequestDTO.SelectChargerRequestDTO","title":"<code>SelectChargerRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>charger_id</code> <code>str</code> <p>(str) Assigned ID of the charger on site</p> <code>site_id</code> <code>str</code> <p>(str) Site id of the transaction</p>"},{"location":"Charger/%5BGET%5D%20selectCharger/#modules.charger.__.dtos.SelectChargerResponseDTO.SelectChargerResponseDTO","title":"<code>SelectChargerResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>charger</code> <code>dict</code> <p>dictionary containing the charger information based on <code>ChargerDTO</code></p>"},{"location":"Charger/%5BGET%5D%20selectCharger/#modules.charger.__.dtos.ChargerDTO.ChargerDTO","title":"<code>ChargerDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>name that will be displayed for the charger</p> <code>brand</code> <code>str</code> <p>brand of the charger</p> <code>model</code> <code>str</code> <p>model of the charger</p> <code>location</code> <code>str</code> <p>location where the charger can be found</p> <code>site_id</code> <code>int</code> <p>id for the site where the charger is associated</p> <code>connectors</code> <code>list</code> <p>details of the connector related for the charger</p>"},{"location":"Charger/%5BPOST%5D%20remoteStartCharging/","title":"[POST] remoteStartCharging","text":"<pre><code>/api/remoteStartCharging\n</code></pre>"},{"location":"Charger/%5BPOST%5D%20remoteStartCharging/#modules.charger.__.dtos.RemoteStartRequestDTO.RemoteStartRequestDTO","title":"<code>RemoteStartRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>email</code> <code>str</code> <p>EMAIL OF USER</p> <code>site_id</code> <code>int</code> <p>SITE ID OF CHARGER</p> <code>charger_id</code> <code>str</code> <p>CHARGER ID TO START</p> <code>connector_id</code> <code>int</code> <p>CONNECTOR ID TO START</p> <code>duration</code> <code>float</code> <p>INTENDED DURATION OF CHARGING</p> <code>payment_intent_id</code> <code>Optional[str]</code> <p>USE THIS FOR PAYMONGO. OTHERWISE, MONEY WILL BE DEDUCTED TO WALLET</p>"},{"location":"Charger/%5BPOST%5D%20remoteStartCharging/#modules.charger.__.dtos.RemoteStartResponseDTO.RemoteStartResponseDTO","title":"<code>RemoteStartResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>transaction_id</code> <code>str</code> <p>CHARGE TRANSACTION ID</p>"},{"location":"Charger/%5BPOST%5D%20remoteStartCharging/#notes","title":"Notes","text":"<ul> <li>If <code>payment_intent_id</code> is indicated, this endpoint will only work for the following cases:<ul> <li>If payment method is credit card and the status is awaiting capture.</li> <li>If payment method is non-credit card and the status is paid.</li> </ul> </li> </ul>"},{"location":"Charger/%5BWebSocket%5D%20clientSocket/","title":"[WebSocket] clientSocket","text":"<pre><code>???/charger/client-socket\n</code></pre>"},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#modules.vps.dtos.ClientSocketRequestDTO.ClientSocketRequestDTO","title":"<code>ClientSocketRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>action</code> <code>ActionEnum</code> <code>body</code> <code>Union[RemoteStartRequestDTO, RemoteStopRequestDTO, ChargingDetailsRequestDTO]</code> <code>authorization</code> <code>str</code> <p>JWT authorization token</p>"},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#modules.vps.dtos.ClientSocketResponseDTO.ClientSocketResponseDTO","title":"<code>ClientSocketResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>action</code> <code>ActionEnum</code> <code>body</code> <code>Union[RemoteResponseDTO, ChargingDetailsResponseDTO]</code>"},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#modules.vps.enums.ActionEnum.ActionEnum","title":"<code>ActionEnum</code>","text":"Values Start Stop GetChargingDetails"},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#remote-start-charging-action","title":"Remote Start Charging Action","text":""},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#modules.vps.dtos.RemoteStartRequestDTO.RemoteStartRequestDTO","title":"<code>RemoteStartRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>site_id</code> <code>int</code> <code>charger_id</code> <code>str</code> <code>connector_id</code> <code>int</code> <code>duration</code> <code>float</code> <p>IN HOURS</p> <code>payment_intent_id</code> <code>Optional[str]</code> <p>USE THIS FOR PAYMONGO. OTHERWISE, MONEY WILL BE DEDUCTED TO WALLET</p>"},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#modules.vps.dtos.RemoteResponseDTO.RemoteResponseDTO","title":"<code>RemoteResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>status</code> <code>CallResultStatusEnum</code> <code>transaction_id</code> <code>str</code>"},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#remote-stop-charging-action","title":"Remote Stop Charging Action","text":""},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#modules.vps.dtos.RemoteStopRequestDTO.RemoteStopRequestDTO","title":"<code>RemoteStopRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>transaction_id</code> <code>str</code>"},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#modules.vps.dtos.RemoteResponseDTO.RemoteResponseDTO","title":"<code>RemoteResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>status</code> <code>CallResultStatusEnum</code> <code>transaction_id</code> <code>str</code>"},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#charging-details-action","title":"Charging Details Action","text":""},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#modules.vps.dtos.ChargingDetailsRequestDTO.ChargingDetailsRequestDTO","title":"<code>ChargingDetailsRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>transaction_id</code> <code>str</code> <p>Transaction ID of the ongoing charging session</p> <code>site_id</code> <code>str</code> <p>Site ID of the transaction</p>"},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#modules.vps.dtos.ChargingDetailsResponseDTO.ChargingDetailsResponseDTO","title":"<code>ChargingDetailsResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>duration</code> <code>str</code> <p>Duration of the charging session in HH:MM:SS format</p> <code>kwh</code> <code>float</code> <p>Total energy consumed in kWh</p> <code>latest_kw</code> <code>float</code> <p>Latest power drawn by the vehicle in kW</p> <code>time_started</code> <code>str</code> <p>Time when the charging session started in YYYY-MM-DD HH:MM:SS format</p> <code>time_remaining</code> <code>str</code> <p>Time remaining for the charging session to complete in HH:MM:SS format</p> <code>total</code> <code>float</code> <p>Total cost of the charging session in PHP</p> <code>cost_breakdown</code> <code>dict</code> <p>Breakdown of the cost of the charging session</p> <code>soc</code> <code>float</code> <p>State of charge of the vehicle in percentage (optional)</p>"},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#error-response","title":"Error Response","text":""},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#modules.vps.dtos.WSErrorResponseDTO.WSErrorResponseDTO","title":"<code>WSErrorResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>action</code> <code>ActionEnum</code> <p>action to be performed by the server</p> <code>error_message</code> <code>str</code> <p>error message given in FE - BE code format (i.e. TXN_DONE)</p>"},{"location":"Charger/%5BWebSocket%5D%20clientSocket/#notes","title":"Notes","text":"<ul> <li>There are only two types of errors that could possibly occur.<ul> <li>The first type of error is when the error does not disconnect the WebSocket connection.   There are caused by the following:<ul> <li><code>TRANSACTION_DOES_NOT_EXIST</code></li> <li><code>CHARGER_OFFLINE</code></li> </ul> </li> <li>The second type of error will close the WebSocket connection and is caused by the following:<ul> <li><code>TXN_DONE</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"Charger/%5BWebSocket%5D%20embeddedSocket/","title":"[WebSocket] embeddedSocket","text":"<pre><code>???/charger/embedded-socket/{site_id}\n</code></pre>"},{"location":"Driver/%5BGET%5D%20driverHistory/","title":"[GET] driverHistory","text":"<pre><code>/api/driverHistory\n</code></pre>"},{"location":"Driver/%5BGET%5D%20driverHistory/#modules.driver.dtos.DriverHistoryRequestDTO","title":"<code>DriverHistoryRequestDTO</code>","text":""},{"location":"Driver/%5BGET%5D%20driverHistory/#modules.driver.dtos.DriverHistoryResponseDTO","title":"<code>DriverHistoryResponseDTO</code>","text":""},{"location":"Driver/%5BGET%5D%20userBalance/","title":"[GET] userBalance","text":"<pre><code>/api/userBalance\n</code></pre>"},{"location":"Driver/%5BGET%5D%20userBalance/#modules.driver.dtos.UserBalanceDTO.UserBalanceRequestDTO","title":"<code>UserBalanceRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>email</code> <code>str</code> <p>email address of the user</p>"},{"location":"Driver/%5BGET%5D%20userBalance/#modules.driver.dtos.UserBalanceDTO.UserBalanceResponseDTO","title":"<code>UserBalanceResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>envision_balance</code> <code>float</code> <p>EV wallet balance</p>"},{"location":"Driver/%5BPOST%5D%20checkMobileAppVersion/","title":"[POST] checkMobileAppVersion","text":"<pre><code>/api/driver/checkMobileAppVersion\n</code></pre>"},{"location":"Driver/%5BPOST%5D%20checkMobileAppVersion/#modules.driver.endpoints.checkMobileAppVersion.CheckMobileAppVersionRequestDTO","title":"<code>CheckMobileAppVersionRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>mobile_app_version</code> <code>Optional[str]</code>"},{"location":"Driver/%5BPOST%5D%20checkMobileAppVersion/#modules.core.dtos.ResponseDTO.ResponseDTO","title":"<code>ResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>statusCode</code> <code>int</code> <p>status code of the response</p> <code>headers</code> <code>dict</code> <p>headers of the response</p> <code>body</code> <code>Annotated[Optional[ResponseBodyBaseModel], PlainSerializer(lambda body: model_dump_json(), when_used=unless - none)]</code> <p>body of the response</p>"},{"location":"Driver/%5BPOST%5D%20checkMobileAppVersion/#expected-error-messages","title":"Expected Error Messages","text":"<ul> <li>INVALID_APP_VERSION</li> </ul>"},{"location":"Driver/%5BPOST%5D%20checkSessionValidity/","title":"[POST] checkSessionValidity","text":"<pre><code>/api/driver/checkSessionValidity\n</code></pre>"},{"location":"Driver/%5BPOST%5D%20checkSessionValidity/#modules.driver.dtos.CheckSessionValidityDTOs.CheckSessionValidityRequestDTO","title":"<code>CheckSessionValidityRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>session_token</code> <code>str</code>"},{"location":"Driver/%5BPOST%5D%20checkSessionValidity/#modules.core.dtos.ResponseDTO.ResponseDTO","title":"<code>ResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>statusCode</code> <code>int</code> <p>status code of the response</p> <code>headers</code> <code>dict</code> <p>headers of the response</p> <code>body</code> <code>Annotated[Optional[ResponseBodyBaseModel], PlainSerializer(lambda body: model_dump_json(), when_used=unless - none)]</code> <p>body of the response</p>"},{"location":"Driver/%5BPOST%5D%20checkSessionValidity/#expected-error-messages","title":"Expected Error Messages","text":"<ul> <li>INVALID_SESSION: Occurs when the session has the wrong encryption key or is expired</li> <li>ACCOUNT_NOT_EXIST: Occurs when the driver associated with the session does not exist</li> </ul>"},{"location":"Driver/%5BPOST%5D%20login/","title":"[POST] login","text":"<pre><code>/api/login\n</code></pre>"},{"location":"Driver/%5BPOST%5D%20login/#modules.driver.dtos.LoginDTOs.LoginRequestDTO","title":"<code>LoginRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>email</code> <code>str</code> <p>Email address of the user</p> <code>password</code> <code>str</code> <p>Password of the user</p>"},{"location":"Driver/%5BPOST%5D%20login/#modules.driver.dtos.LoginDTOs.LoginResponseDTO","title":"<code>LoginResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>driver_id</code> <code>str</code> <p>unique id assigned to the driver</p> <code>first_name</code> <code>str</code> <p>first name of the driver</p> <code>last_name</code> <code>str</code> <p>last name of the driver</p> <code>email_address</code> <code>str</code> <p>email address of the driver</p> <code>rfid</code> <code>str</code> <p>unique rfid tag assigned to the driver if any</p> <code>token</code> <code>str</code> <p>session token generated for the driver</p>"},{"location":"Driver/%5BPOST%5D%20logout/","title":"[POST] logout","text":"<pre><code>/api/logout\n</code></pre>"},{"location":"Driver/%5BPOST%5D%20logout/#modules.driver.dtos.LogoutRequestDTO.LogoutRequestDTO","title":"<code>LogoutRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>email_add</code> <code>str</code> <p>email address of the user to be logged out</p>"},{"location":"Driver/%5BPOST%5D%20signUp/","title":"[POST] signUp","text":"<pre><code>/api/signUp\n</code></pre>"},{"location":"Driver/%5BPOST%5D%20signUp/#modules.driver.dtos.SignUpDTOs.SignUpRequestDTO","title":"<code>SignUpRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>data</code> <code>str</code> <p>encrypted data of the user</p>"},{"location":"Driver/%5BPOST%5D%20signUp/#modules.core.dtos.ResponseDTO.ResponseDTO","title":"<code>ResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>statusCode</code> <code>int</code> <p>status code of the response</p> <code>headers</code> <code>dict</code> <p>headers of the response</p> <code>body</code> <code>Annotated[Optional[ResponseBodyBaseModel], PlainSerializer(lambda body: model_dump_json(), when_used=unless - none)]</code> <p>body of the response</p>"},{"location":"Driver/Account%20Deletion/%5BGET%5D%20deleteSchedule/","title":"[GET] deleteSchedule","text":"<pre><code>/api/driver/deleteSchedule\n</code></pre>"},{"location":"Driver/Account%20Deletion/%5BGET%5D%20deleteSchedule/#modules.driver.deletion.__.endpoints.deleteSchedule.ResponseDTO","title":"<code>ResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>target_deletion_utc</code> <code>Union[EVDateTime, None]</code> <p>THE DRIVER WILL BE DELETED ON THIS DATE.</p>"},{"location":"Driver/Account%20Deletion/%5BPOST%5D%20deleteCancel/","title":"[POST] deleteCancel","text":"<pre><code>/api/driver/deleteCancel\n</code></pre>"},{"location":"Driver/Account%20Deletion/%5BPOST%5D%20deleteCancel/#modules.driver.deletion.__.endpoints.deleteCancel.ResponseDTO","title":"<code>ResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>driver_id</code> <code>str</code>"},{"location":"Driver/Account%20Deletion/%5BPOST%5D%20deleteInstant/","title":"[POST] deleteInstant","text":"<pre><code>/api/driver/deleteInstant\n</code></pre>"},{"location":"Driver/Account%20Deletion/%5BPOST%5D%20deleteInstant/#modules.driver.deletion.__.endpoints.deleteInstant.DeleteInstantRequestDTO","title":"<code>DeleteInstantRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>email_address</code> <code>str</code>"},{"location":"Driver/Account%20Deletion/%5BPOST%5D%20deleteInstant/#modules.driver.deletion.__.endpoints.deleteInstant.DeleteInstantResponseDTO","title":"<code>DeleteInstantResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>driver_id</code> <code>str</code> <code>email_address</code> <code>str</code>"},{"location":"Driver/Account%20Deletion/%5BPOST%5D%20deleteRequest/","title":"[POST] deleteRequest","text":"<pre><code>/api/driver/deleteRequest\n</code></pre>"},{"location":"Driver/Account%20Deletion/%5BPOST%5D%20deleteRequest/#modules.driver.deletion.__.endpoints.deleteRequest.ResponseDTO","title":"<code>ResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>target_deletion_utc</code> <code>str</code> <p>THE DRIVER WILL BE DELETED ON THIS DATE.</p> <code>driver_id</code> <code>str</code>"},{"location":"Driver/Forgot%20Password/%5BPOST%5D%20checkPasswordRequest/","title":"[POST] checkPasswordRequest","text":"<pre><code>/api/driver/checkPasswordRequest\n</code></pre>"},{"location":"Driver/Forgot%20Password/%5BPOST%5D%20checkPasswordRequest/#modules.driver.dtos.PasswordResetDTOs.CheckPasswordRequestRequestDTO","title":"<code>CheckPasswordRequestRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>id</code> <code>str</code> <p>encrypted request id</p>"},{"location":"Driver/Forgot%20Password/%5BPOST%5D%20checkPasswordRequest/#notes","title":"Notes:","text":"<ul> <li>Expect the normal response to be returned with a status of 200 OK.</li> </ul>"},{"location":"Driver/Forgot%20Password/%5BPOST%5D%20checkPasswordRequest/#expected-error-messages","title":"Expected error messages","text":"<ul> <li><code>WRONG_PARAMS</code> - If the email provided is not associated with any account.</li> <li><code>INVALID_REQUEST</code> - if request is already used or already expired (past 24hrs) or is consumed.</li> </ul>"},{"location":"Driver/Forgot%20Password/%5BPOST%5D%20initiatePasswordReset/","title":"[POST] initiatePasswordReset","text":"<pre><code>/api/driver/initiatePasswordReset\n</code></pre>"},{"location":"Driver/Forgot%20Password/%5BPOST%5D%20initiatePasswordReset/#modules.driver.dtos.PasswordResetDTOs.InitiatePasswordResetRequestDTO","title":"<code>InitiatePasswordResetRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>email</code> <code>EmailStr</code> <p>email address of the user</p>"},{"location":"Driver/Forgot%20Password/%5BPOST%5D%20initiatePasswordReset/#notes","title":"Notes:","text":"<ul> <li>Expect the normal response to be returned with a status of 200 OK.</li> <li>It will email the driver with a link to reset their password.</li> </ul>"},{"location":"Driver/Forgot%20Password/%5BPOST%5D%20initiatePasswordReset/#expected-error-messages","title":"Expected error messages","text":"<ul> <li><code>ACCOUNT_NOT_EXIST</code> - If the email provided is not associated with any account.</li> <li><code>REQUEST_EXIST</code> - if the driver already initiated an unresolved password reset request.</li> <li><code>REQUEST_LIMIT</code> - if the driver has reached the limit of password reset requests for the day.</li> </ul>"},{"location":"Driver/Forgot%20Password/%5BPOST%5D%20resetPassword/","title":"[POST] resetPassword","text":"<pre><code>/api/driver/resetPassword\n</code></pre>"},{"location":"Driver/Forgot%20Password/%5BPOST%5D%20resetPassword/#modules.driver.dtos.PasswordResetDTOs.ResetPasswordRequestDTO","title":"<code>ResetPasswordRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>data</code> <code>str</code> <p>encrypted data containing ChangePasswordDTO</p>"},{"location":"Driver/Forgot%20Password/%5BPOST%5D%20resetPassword/#modules.driver.dtos.PasswordResetDTOs.ChangePasswordDTO","title":"<code>ChangePasswordDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>request_id</code> <code>str</code> <p>encrypted request id</p> <code>password</code> <code>str</code> <p>new password</p>"},{"location":"Driver/Forgot%20Password/%5BPOST%5D%20resetPassword/#notes","title":"Notes:","text":"<ul> <li>Expect the normal response to be returned with a status of 200 OK.</li> </ul>"},{"location":"Driver/Forgot%20Password/%5BPOST%5D%20resetPassword/#expected-error-messages","title":"Expected error messages","text":"<ul> <li><code>ACCOUNT_NOT_EXIST</code> - If the email provided is not associated with any account.</li> </ul>"},{"location":"Invoices/Charging%20Receipt/","title":"Charging Receipt","text":"<pre><code>/api/chargingReceipt\n</code></pre>"},{"location":"Invoices/Charging%20Receipt/#modules.charger.__.dtos.ChargingReceiptRequestDTO.ChargingReceiptRequestDTO","title":"<code>ChargingReceiptRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>transaction_id</code> <code>str</code> <p>unique ID of the transaction</p>"},{"location":"Invoices/Charging%20Receipt/#modules.charger.__.dtos.ChargingReceiptRequestDTO.ChargingReceiptResponseDTO","title":"<code>ChargingReceiptResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>charger</code> <code>ChargingReceiptChargerDTO</code> <p>charger details</p> <code>transaction</code> <code>ChargingReceiptTransactionDTO</code> <p>transaction details</p> <code>cost</code> <code>ChargingReceiptCostingDTO</code> <p>costing breakdown</p> <code>refunds</code> <code>ChargingReceiptRefundsDTO</code> <p>refund details if any</p> <code>payment</code> <code>ChargingReceiptPaymentDetailsDTO</code> <p>payment details</p>"},{"location":"Invoices/Charging%20Receipt/#modules.charger.__.dtos.ChargingReceiptRequestDTO.ChargingReceiptChargerDTO","title":"<code>ChargingReceiptChargerDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>name of the charger</p> <code>connector</code> <code>str</code> <p>connector type</p> <code>location</code> <code>str</code> <p>location of the charger</p>"},{"location":"Invoices/Charging%20Receipt/#modules.charger.__.dtos.ChargingReceiptRequestDTO.ChargingReceiptTransactionDTO","title":"<code>ChargingReceiptTransactionDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>id</code> <code>str</code> <p>transaction id</p> <code>duration</code> <code>str</code> <p>duration in standard format HH:MM:SS</p> <code>start</code> <code>str</code> <p>start time of the transaction in YY-MM-DD HH:MM:SS</p> <code>end</code> <code>str</code> <p>end time of the transaction in YY-MM-DD HH:MM:SS</p> <code>kwh</code> <code>float</code> <p>kwh consumed during the transaction</p>"},{"location":"Invoices/Charging%20Receipt/#modules.charger.__.dtos.ChargingReceiptRequestDTO.ChargingReceiptCostingDTO","title":"<code>ChargingReceiptCostingDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>breakdown</code> <code>dict</code> <p>costing breakdown</p> <code>subtotal</code> <code>float</code> <p>subtotal without the vat</p> <code>vat</code> <code>float</code> <p>value added tax</p> <code>discount</code> <code>dict</code> <p>discount if available</p> <code>total_price</code> <code>float</code> <p>sum of all costs</p>"},{"location":"Invoices/Charging%20Receipt/#modules.charger.__.dtos.ChargingReceiptRequestDTO.ChargingReceiptRefundsDTO","title":"<code>ChargingReceiptRefundsDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>amount</code> <code>float</code> <p>refunded amount in PHP</p> <code>status</code> <code>str</code> <p>status of the refund process</p> <code>datetime</code> <code>str</code> <p>time refunded</p>"},{"location":"Invoices/Charging%20Receipt/#modules.charger.__.dtos.ChargingReceiptRequestDTO.ChargingReceiptPaymentDetailsDTO","title":"<code>ChargingReceiptPaymentDetailsDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>amount</code> <code>float</code> <p>price paid in PHP</p> <code>method</code> <code>Union[str, PaymentMethodEnum]</code> <p>payment method used for the transaction</p>"},{"location":"Invoices/Charging%20Receipt/#modules.payment.enums.PaymentMethodEnum.PaymentMethodEnum","title":"<code>PaymentMethodEnum</code>","text":"<p>Attributes:</p> Name Type Description <code>CARD</code> <p>credit / debit card</p> <code>GCASH</code> <p>GCASH</p> <code>GRAB_PAY</code> <p>GrabPay</p> <code>MAYA</code> <p>PayMaya</p> <code>WALLET</code> <p>wallet</p> <code>FREE</code> <p>null</p>"},{"location":"Parking/Design/","title":"Design","text":""},{"location":"Parking/Design/#db-design","title":"DB DESIGN","text":"<pre><code>erDiagram\n    Site ||--O| ParkingTimeSpan : CONTAINS\n    Site ||--O{ ParkingSlot : CONTAINS\n    Site ||--O{ Charger : CONTAINS\n\n    ParkingTimeSpan ||--O{ ParkingTimeSlot : CONTAINS\n\n    ParkingTimeSlot ||--|{ ParkingSlotReservation : \"IS USED BY\"\n\n    ParkingSlot ||--|{ ParkingSlotReservation : \"CONTAINS\"\n    ParkingSlot ||--|{ ParkingSlotToConnectorsJoin : \"LINKS TO\"\n\n    Charger ||--|| ParkingSlotToConnectorsJoin : CONTAINS</code></pre>"},{"location":"Parking/Driver/%5BGET%5D%20dayReservations/","title":"[GET] dayReservations","text":"<pre><code>/api/parking/driver/dayReservations\n</code></pre>"},{"location":"Parking/Driver/%5BGET%5D%20dayReservations/#modules.parking.driver.__.endpoints.dayReservations.DayReservationsRequestDTO","title":"<code>DayReservationsRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>site_id</code> <code>int</code> <code>local_date</code> <code>Annotated[date, AfterValidator(validateDriverLocalDate)]</code>"},{"location":"Parking/Driver/%5BGET%5D%20dayReservations/#modules.parking.driver.__.endpoints.dayReservations.DayReservationsResponseDTO","title":"<code>DayReservationsResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>time_slots</code> <code>List[TimeSlotDTO]</code>"},{"location":"Parking/Driver/%5BGET%5D%20dayReservations/#modules.parking.driver.__.endpoints.dayReservations.TimeSlotDTO","title":"<code>TimeSlotDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>parking_time_slot_id</code> <code>int</code> <code>start_local</code> <code>EVCivilianTime</code> <code>end_local</code> <code>EVCivilianTime</code> <code>details</code> <code>List[ReservationDTO]</code>"},{"location":"Parking/Driver/%5BGET%5D%20dayReservations/#modules.parking.__.services.createReservationDTO.ReservationDTO","title":"<code>ReservationDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>parking_slot_id</code> <code>int</code> <code>charger_id</code> <code>str</code> <code>charger_name</code> <code>str</code> <code>connector_id</code> <code>List[int]</code> <code>connector_type</code> <code>List[Optional[str]]</code> <code>status</code> <code>Status</code> <code>user</code> <code>Optional[str]</code> <p>THIS IS ONLY FILLED FOR MANAGER ENDPOINT</p> <code>email</code> <code>Optional[str]</code> <p>THIS IS ONLY FILLED FOR MANAGER ENDPOINT</p>"},{"location":"Parking/Driver/%5BGET%5D%20userReservations/","title":"[GET] userReservations","text":"<pre><code>/api/parking/driver/userReservations\n</code></pre>"},{"location":"Parking/Driver/%5BGET%5D%20userReservations/#modules.parking.driver.__.endpoints.userReservations.UserReservationsResponseDTO","title":"<code>UserReservationsResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>reservations</code> <code>List[ReservationDTO]</code>"},{"location":"Parking/Driver/%5BGET%5D%20userReservations/#modules.parking.driver.__.endpoints.userReservations.ReservationDTO","title":"<code>ReservationDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>reservation_id</code> <code>int</code> <code>date</code> <code>EVDate</code> <code>time</code> <code>EVCivilianTimeRange</code> <code>site_name</code> <code>str</code> <code>charger_name</code> <code>str</code> <code>connector_type</code> <code>List[Optional[str]]</code>"},{"location":"Parking/Driver/%5BPOST%5D%20requestReservation/","title":"[POST] requestReservation","text":"<pre><code>/api/parking/driver/requestReservation\n</code></pre>"},{"location":"Parking/Driver/%5BPOST%5D%20requestReservation/#modules.parking.driver.__.endpoints.requestReservation.RequestReservationRequestDTO","title":"<code>RequestReservationRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>reservation_start_date</code> <code>Annotated[date, AfterValidator(validateDriverLocalDate)]</code> <code>parking_time_slot_id</code> <code>int</code> <code>parking_slot_id</code> <code>int</code>"},{"location":"Parking/Driver/%5BPOST%5D%20requestReservation/#modules.parking.driver.__.endpoints.requestReservation.RequestReservationResponseDTO","title":"<code>RequestReservationResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>parking_slot_reservation_id</code> <code>int</code>"},{"location":"Parking/Manager/%5BGET%5D%20getReservations/","title":"[GET] getReservations","text":"<pre><code>/api/parking/manager/getReservations\n</code></pre>"},{"location":"Parking/Manager/%5BGET%5D%20getReservations/#modules.parking.manager.__.endpoints.getReservations.GetReservationsRequestDTO","title":"<code>GetReservationsRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>site_id</code> <code>int</code> <code>start_date</code> <code>date</code> <code>end_date</code> <code>date</code>"},{"location":"Parking/Manager/%5BGET%5D%20getReservations/#modules.parking.manager.__.endpoints.getReservations.GetReservationsResponseDTO","title":"<code>GetReservationsResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>reservations</code> <code>List[ReservationsPerDateDTO]</code>"},{"location":"Parking/Manager/%5BGET%5D%20getReservations/#modules.parking.manager.__.endpoints.getReservations.ReservationsPerDateDTO","title":"<code>ReservationsPerDateDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>date</code> <code>EVDate</code> <code>time_slots</code> <code>List[TimeSlotDTO]</code>"},{"location":"Parking/Manager/%5BGET%5D%20getReservations/#modules.parking.manager.__.endpoints.getReservations.TimeSlotDTO","title":"<code>TimeSlotDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>time</code> <code>EVCivilianTimeRange</code> <code>details</code> <code>List[ReservationDTO]</code>"},{"location":"Parking/Manager/%5BGET%5D%20getReservations/#modules.parking.__.services.createReservationDTO.ReservationDTO","title":"<code>ReservationDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>parking_slot_id</code> <code>int</code> <code>charger_id</code> <code>str</code> <code>charger_name</code> <code>str</code> <code>connector_id</code> <code>List[int]</code> <code>connector_type</code> <code>List[Optional[str]]</code> <code>status</code> <code>Status</code> <code>user</code> <code>Optional[str]</code> <p>THIS IS ONLY FILLED FOR MANAGER ENDPOINT</p> <code>email</code> <code>Optional[str]</code> <p>THIS IS ONLY FILLED FOR MANAGER ENDPOINT</p>"},{"location":"Parking/Manager/%5BGET%5D%20getSettings/","title":"[GET] getSettings","text":"<pre><code>/api/parking/manager/getSettings\n</code></pre>"},{"location":"Parking/Manager/%5BGET%5D%20getSettings/#modules.parking.manager.__.endpoints.getSettings.GetSettingsRequestDTO","title":"<code>GetSettingsRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>site_id</code> <code>int</code>"},{"location":"Parking/Manager/%5BGET%5D%20getSettings/#modules.parking.manager.__.endpoints.getSettings.GetSettingsResponseDTO","title":"<code>GetSettingsResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>settings_id</code> <code>int</code> <code>time_slots</code> <code>List[TimeSlotDTO]</code>"},{"location":"Parking/Manager/%5BPOST%5D%20updateSettings/","title":"[POST] updateSettings","text":"<pre><code>/api/parking/manager/updateSettings\n</code></pre>"},{"location":"Parking/Manager/%5BPOST%5D%20updateSettings/#modules.parking.manager.__.endpoints.updateSettings.UpdateSettingsRequestDTO","title":"<code>UpdateSettingsRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>site_id</code> <code>int</code> <code>time_slots</code> <code>List[TimeSlotDTO]</code>"},{"location":"Parking/Manager/%5BPOST%5D%20updateSettings/#modules.parking.manager.__.endpoints.updateSettings.UpdateSettingsResponseDTO","title":"<code>UpdateSettingsResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>settings_id</code> <code>int</code> <code>to_be_applied_pht</code> <code>EVDateTime</code>"},{"location":"Payment/Capture/","title":"Capture","text":"<p>This page explains the implementation of auto-capture.</p> <ol> <li>The <code>Charger_Payment_History</code> table is filled during <code>remoteStartCharging</code>. This is to    identify whether the charging session is via PayMongo or Wallet.</li> <li>On charger status updates, the <code>insertTransactionData</code> handler is triggered.</li> <li>There, we send a message to the <code>CapturePaymentQueue</code> if the following conditions are met:<ul> <li>The charger was stopped.</li> <li>The capture type of the payment associated with the charging session is <code>manual</code>.</li> </ul> </li> <li>The handler associated with the <code>CapturePaymentQueue</code> will then attempt to capture the payment.    If it fails, the message will be sent to the dead-letter queue.</li> </ol>"},{"location":"Payment/Flow/","title":"Flow","text":"<ol> <li>Send a Payment Intent Request.<ul> <li>Set <code>capture_type</code> to <code>automatic</code> for immediate payment.</li> <li>Set <code>capture_type</code> to <code>manual</code> for credit card hold-and-capture payment.</li> </ul> </li> <li>Create Payment Method in FRONTEND.</li> <li>Attach Payment Intent and Method in FRONTEND.</li> <li>If applicable, capture will be done automatically after charging.</li> </ol>"},{"location":"Payment/PayMongo%20Link/","title":"PayMongo Link","text":"<pre><code>https://developers.paymongo.com/docs/pipm-workflow\n</code></pre>"},{"location":"Payment/%5BPOST%5D%20createPaymentIntent/","title":"[POST] createPaymentIntent","text":"<pre><code>/api/createPaymentIntent\n</code></pre>"},{"location":"Payment/%5BPOST%5D%20createPaymentIntent/#modules.payment.dtos.CreateIntentRequestDTO.CreateIntentRequestDTO","title":"<code>CreateIntentRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>amount</code> <code>int</code> <p>INTENDED AMOUNT FOR PAYMENT</p> <code>email</code> <code>str</code> <p>EMAIL OF PAYER</p> <code>purpose</code> <code>IntentPurposeEnum</code> <p>LOOK AT Payment Combinations FOR VALUES.</p> <code>payment_method</code> <code>PaymentMethodEnum</code> <p>LOOK AT Payment Combinations FOR VALUES.</p>"},{"location":"Payment/%5BPOST%5D%20createPaymentIntent/#payment-combinations","title":"Payment Combinations","text":"<p>Use the literal values inside the cells.</p> <p>The <code>capture_type</code> column is only here for visualization. Ignore it.</p> purpose payment_method capture_type Top Up card automatic gcash grab_pay paymaya Straight Payment card manual gcash automatic grab_pay paymaya"},{"location":"Payment/%5BPOST%5D%20createPaymentIntent/#modules.payment.dtos.CreateIntentResponseDTO.CreateIntentResponseDTO","title":"<code>CreateIntentResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>client_key</code> <code>str</code> <p>USED FOR ATTACHING PAYMENT INTENT AND METHOD</p>"},{"location":"Payment/%5BPOST%5D%20paymentStatus/","title":"[POST] paymentStatus","text":"<pre><code>/api/paymentStatus\n</code></pre> <p>```</p>"},{"location":"Payment/%5BPOST%5D%20paymentStatus/#modules.payment.dtos.PaymentStatusDTO.PaymentStatusRequestDTO","title":"<code>PaymentStatusRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>email</code> <code>str</code> <p>email of the user</p> <code>payment_intent_id</code> <code>str</code> <p>payment intent id to get the status of</p>"},{"location":"Payment/%5BPOST%5D%20paymentStatus/#modules.payment.dtos.PaymentStatusDTO.PaymentStatusResponseDTO","title":"<code>PaymentStatusResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>payment_status</code> <code>str</code> <p>status of the payment</p>"},{"location":"Site/%5BGET%5D%20allSites/","title":"[GET] allSites","text":"<pre><code>/api/site/allSites\n</code></pre>"},{"location":"Site/%5BGET%5D%20allSites/#modules.site.__.endpoints.allSites.AllSitesResponseDTO","title":"<code>AllSitesResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>sites</code> <code>List[SiteDTO]</code> <p>list of sites</p>"},{"location":"Site/%5BGET%5D%20allSites/#modules.site.__.endpoints.allSites.SiteDTO","title":"<code>SiteDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>site_id</code> <code>int</code> <p>unique id assigned to a site</p> <code>site_name</code> <code>str</code> <p>name of the site</p> <code>latitude</code> <code>Optional[Decimal]</code> <p>latitudinal coordinates of the site</p> <code>longitude</code> <code>Optional[Decimal]</code> <p>longitudinal coordinates of the site</p> <code>site_address</code> <code>str</code> <p>address of the site</p> <code>site_img</code> <code>Optional[str]</code> <p>link of the site image</p> <code>google_id</code> <code>str</code> <p>google id of the site</p> <code>charger_count</code> <code>int</code> <p>number of chargers at the site regardless of status</p> <code>charger_types</code> <code>List[ChargerTypeEnum]</code> <p>list of unique charger types (AC/DC)</p> <code>connector_types</code> <code>List[ConnectorTypeEnum]</code> <p>list of unique connector types available at the site</p> <code>max_charging</code> <code>List[float]</code> <p>list of unique max charging values</p> <code>charging_price</code> <code>List[float]</code> <p>list of unique charging prices at price / kwh</p>"},{"location":"Site/%5BGET%5D%20allSites/#modules.charger.__.enums.ConnectorTypeEnum.ConnectorTypeEnum","title":"<code>ConnectorTypeEnum</code>","text":"<p>Attributes:</p> Name Type Description <code>TYPE_2</code> <p>Type 2 connector</p> <code>CHADEMO</code> <p>CHAdeMO connector</p> <code>CCS2</code> <p>CCS2 connector</p>"},{"location":"Site/%5BGET%5D%20allSites/#modules.core.enums.ChargerTypeEnum.ChargerTypeEnum","title":"<code>ChargerTypeEnum</code>","text":"<p>Attributes:</p> Name Type Description <code>AC</code> <p>Alternating Current</p> <code>DC</code> <p>Direct Current</p> <code>AC/DC</code> <p>Alternating and Direct Current</p>"},{"location":"Site/%5BGET%5D%20siteDetails/","title":"[GET] siteDetails","text":"<pre><code>/api/site/siteDetails\n</code></pre>"},{"location":"Site/%5BGET%5D%20siteDetails/#modules.site.__.endpoints.siteDetails.SiteDetailsRequestDTO","title":"<code>SiteDetailsRequestDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>site_id</code> <code>int</code> <p>unique id of the site</p>"},{"location":"Site/%5BGET%5D%20siteDetails/#modules.site.__.endpoints.siteDetails.SiteDetailsResponseDTO","title":"<code>SiteDetailsResponseDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>site_id</code> <code>int</code> <p>unique id assigned to a site</p> <code>site_name</code> <code>str</code> <p>name of the site</p> <code>site_address</code> <code>Optional[str]</code> <p>address of the site</p> <code>site_img</code> <code>Optional[str]</code> <p>link of the site image</p> <code>is_private</code> <code>bool</code> <p>boolean indicating if the site is classified as private</p> <code>allowed_reservation</code> <code>bool</code> <p>boolean indicating if the site allows charging reservations</p> <code>chargers</code> <code>List[ChargerDTO]</code> <p>list of chargers</p> <code>location</code> <code>Optional[str]</code> <p>location of the charger</p>"},{"location":"Site/%5BGET%5D%20siteDetails/#modules.site.__.endpoints.siteDetails.ChargerDTO","title":"<code>ChargerDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>id</code> <code>str</code> <p>unique id assigned to a charger</p> <code>name</code> <code>Optional[str]</code> <p>name of the charger</p> <code>brand</code> <code>Optional[str]</code> <p>brand of the charger</p> <code>model</code> <code>Optional[str]</code> <p>model of the charger</p> <code>connectors</code> <code>List[ConnectorDTO]</code> <p>list of connectors</p> <code>charger_type</code> <code>ChargerTypeEnum</code> <p>type of the charger</p>"},{"location":"Site/%5BGET%5D%20siteDetails/#modules.site.__.endpoints.siteDetails.ConnectorDTO","title":"<code>ConnectorDTO</code>","text":"<p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <code>type</code> <code>Optional[ConnectorTypeEnum]</code> <code>status</code> <code>Optional[ConnectorStatusEnum]</code> <code>max_charging</code> <code>Optional[float]</code> <code>rate</code> <code>Optional[float]</code>"},{"location":"Site/%5BGET%5D%20siteDetails/#modules.charger.__.enums.ConnectorTypeEnum.ConnectorTypeEnum","title":"<code>ConnectorTypeEnum</code>","text":"<p>Attributes:</p> Name Type Description <code>TYPE_2</code> <p>Type 2 connector</p> <code>CHADEMO</code> <p>CHAdeMO connector</p> <code>CCS2</code> <p>CCS2 connector</p>"},{"location":"Site/%5BGET%5D%20siteDetails/#modules.charger.__.enums.ConnectorStatusEnum.ConnectorStatusEnum","title":"<code>ConnectorStatusEnum</code>","text":"<p>Attributes:</p> Name Type Description <code>Available</code> <p>The connector is available for charging</p> <code>Preparing</code> <p>The connector is plugged in and preparing for charging</p> <code>Reserved</code> <p>The connector is reserved for a user</p> <code>Charging</code> <p>The connector is currently charging</p> <code>Offline</code> <p>The connector is offline</p> <code>SuspendedEVSE</code> <code>SuspendedEV</code> <code>Finishing</code> <p>The connector has finished charging. EV is not drawing power</p> <code>Unavailable</code> <code>Faulted</code> <p>A fault during the charging session was detected</p>"},{"location":"Site/%5BGET%5D%20siteDetails/#modules.core.enums.ChargerTypeEnum.ChargerTypeEnum","title":"<code>ChargerTypeEnum</code>","text":"<p>Attributes:</p> Name Type Description <code>AC</code> <p>Alternating Current</p> <code>DC</code> <p>Direct Current</p> <code>AC/DC</code> <p>Alternating and Direct Current</p>"}]}